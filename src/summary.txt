-=+=- Project -=+=-
Edge Explorer Graph Visualizer

-=+=- Team -=+=-
Michael Sun:
-designed, implemented, and debugged GUI from scratch using the Java Swing library. Added functionality for adding node, removing node, adding edges, and removing edges.
-added functionality for status bars show the state of the program.
-implemented method to convert the GUI to an adjacency matrix on which graph algorithms can be run.
-implemented the BFS algorithm.
-wrote user manual with detailed instructions and screenshots.

Alyssa Antonian:
-implemented shortest path algorithm.
-implemented GUI popups to show results of algorithms and/or user input errors.
-tested/debugged the GUI and other algorithms.
-contributed to add-edge functionality.
-wrote summary.

Tiffany Lian:
-
-
-

-=+=- Overview -=+=-
Categories: Graph/graph algorithms and social networks
Edge Explorer is an interactive graph visualizer built to help students
understand common graph algorithms! After building a unique graph with
your desired nodes, connectivity, weights, and direction, you can run algorithms
like DFS and Dijkstra's to see how they work depending on the input graph
as well as your chosen source. The GUI will even indicate requirements needed to
run certain algorithms, like needing a DAG to topologically sort or non-negative edge
weights to find a shortest path. Additionally, Edge Explorer can be used to help
model social networks, given each node can be labeled as a different person
and edges can be used to model friendships. This way, connectivity between social
circles and degrees of friendship separation can be easily seen!
